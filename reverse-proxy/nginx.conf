################################################################################
#
# This configuration file is an adaptation from
# http://docs.gunicorn.org/en/latest/deploy.html
#
################################################################################
# Generally, this number should match the number of cores on the host machine.
worker_processes 1;

# Define the 'user' and 'group' credentials used by worker processes.
# In the 'nginx' image, we do not have a 'nobody' group, which is typically the
# default, hence why we specify the group here as 'nogroup'
user nobody nogroup;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024; # increase if you have lots of clients
    accept_mutex on; # set to 'off' if nginx worker_processes is 1
    # 'use epoll;' to enable for Linux 2.6+
    # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
    include mime.types;
    # fallback in case we can't determine a type
    default_type application/octet-stream;
    access_log /var/log/nginx/access.log combined;
    sendfile on;

    # Enable GZIP compression
    gzip on;
    # Enable GZIP for both gzipped and regular versions of a file.
    gzip_vary on;
    # Compress files that are larger than 1kb (small files won't gain much)
    gzip_min_length 1024;
    # Compress data even for users connected via proxies
    gzip_proxied expired no-cache no-store private auth;
    # Specify the file types to be compressed.
    gzip_types
        text/plain
        text/css
        text/javascript
        text/xml
        application/json
        application/javascript
        application/xml
        application/x-javascript;
    # Disable gzip for IE browsers version 1-6 since they do not support gzip
    gzip_disable "MSIE [1-6]\.";

    # Use a lookup map to handle file caching by content type.
    # See: https://serverfault.com/questions/1058098
    map $sent_http_content_type $expiration {
        image/x-icon                   1y;
        application/pdf                1y;
        application/javascript         30d;
        text/css                       30d;
        image/png                      30d;
        image/jpeg                     30d;
        image/gif                      30d;
        text/xml                       30d;
        text/plain                     30d;
        default                        off;
    }

    upstream wordpress_fpm {
        # Here, 'fail_timeout=0' means we always retry an upstream even if it
        # failed to return a good HTTP response.
        server website_wordpress:9000 fail_timeout=0;
    }

    server {
        # Set the address and port for the IP on which th eserver will accept
        # requests.
        #
        # Examples:
        #   listen 127.0.0.1:8000;
        #   listen 127.0.0.1;
        #   listen 8000;
        #   listen *:8000;
        #   listen localhost:8000;
        listen *:80;

        # Set the name of the virtual server.
        # e.g. For IP: server_name 175.2.53.55;
        # e.g. For domain: server_name example.com www.example.com;
        server_name example.com www.example.com;

        # Maximum allowed size of the client request body, as would be specified
        # in the 'Content-Length' request header field. If the size in a request
        # exceeds the configured value, the 413 (Request Entity Too Large) error
        # is returned to the client. Setting the value to 0 disables checking of
        # the client request body size.
        client_max_body_size 4G;

        keepalive_timeout 5;

        # Define the files used as indexes when processing requests for this
        # server, and prioritize `index.php`.
        index index.php index.html index.htm;

        # The root directory for requests to this server.
        root /var/www/html;

        location / {
            # Cache static assets based on type.
            expires $expiration;
            # Disable logging of assets that aren't found.
            log_not_found off;

            # Use the `try_files` directive to check for files that match
            # individual URI requests, and instead of returning a 404 status as
            # a default, pass control the Wordpress' `index.php` with the
            # request arguments.
            try_files $uri $uri/ /index.php$is_args$args;
        }

        # Handle PHP processing and proxy the requests to the wordpress
        # container. Nginx must rely on a separate PHP processor to handle PHP
        # requests, and FastCGI has been extensively tested to work with Nginx.
        # The FastCGI protocol configuration options are set here, and we use a
        # `php-fpm` variant of the wordpress container.
        location ~ \.php$ {
            # Use the specified URI, and if not found, redirect to 404.
            try_files $uri =404;

            # This directive defines a regular expression with two groups.
            # The 1st group (.+\.php) sets `$fastcgi_script_name`.
            # The 2nd group (\.+) sets `$fastcgi_path_info`.
            fastcgi_split_path_info ^(.+\.php)(/.+)$;

            # Define the server using the FastCGI protocol to proxy requests to.
            fastcgi_pass wordpress_fpm;

            # Define the index file that should be appended to
            # `$fastcgi_script_name` values that end with a slash (`/`).
            fastcgi_index index.php;

            # Pass extra information when using the FastCGI protocol using
            # parameters.
            include /etc/nginx/fastcgi_params;
            # Here, `$document_root` is specified by the `root` directive, and
            # `$fastcgi_script_name` will be set to the requested URI.
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
        }

        # Ensure `.htaccess` files are never served.
        location ~ /\.ht {
            deny all;
        }

        # Do not log requests to `favicon.ico`
        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        # Do not log requests to `robots.txt`
        location = /robots.txt {
            log_not_found off;
            access_log off;
            allow all;
        }
    }
}
